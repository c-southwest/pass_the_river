// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Game.Shared
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\dada\Desktop\Game\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\dada\Desktop\Game\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\dada\Desktop\Game\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\dada\Desktop\Game\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\dada\Desktop\Game\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\dada\Desktop\Game\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\dada\Desktop\Game\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\dada\Desktop\Game\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\dada\Desktop\Game\_Imports.razor"
using Game;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\dada\Desktop\Game\_Imports.razor"
using Game.Shared;

#line default
#line hidden
#nullable disable
    public partial class River : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 114 "C:\Users\dada\Desktop\Game\Shared\River.razor"
      
    [Parameter]
    public int n { get; set; }
    List<Role> roles_A;
    List<Role> roles_B;
    List<Role> boat;
    Position pos = Position.sideA;
    string drive = "align-self-start";
    string replay = "d-none";
    bool fail = false;
    bool success = false;
    bool no_more = false;

    bool answer = false;
    public enum Position
    {
        sideA,
        sideB
    }
    protected override void OnInitialized()
    {
        string img_K = "img/Kai.png";
        string img_G = "img/Gong.png";
        roles_A = new List<Role>();
        // Kai
        for (int i = 0; i < n; i++)
        {
            roles_A.Add(new Role() { id = i, role = "K", image = img_K, visible = true });
        }

        // Gong
        int tmp = (n == 6) ? 5 : n;
        for (int i = 0; i < tmp; i++)
        {
            roles_A.Add(new Role() { id = i, role = "G", image = img_G, visible = true });

        }

        // Boat
        boat = new List<Role>();

        // Other side
        roles_B = new List<Role>();
    }
    public void A_ON(Role r)
    {
        if (pos == Position.sideB)
        {
            return;
        }
        if (boat.Count == (n > 3 ? 3 : 2))
        {
            return;
        }
        if (roles_A.Remove(r))
        {
            boat.Add(r);
        }
    }

    public void B_ON(Role r)
    {
        if (pos == Position.sideA)
        {
            return;
        }
        if (boat.Count == (n > 3 ? 3 : 2))
        {
            return;
        }
        if (roles_B.Remove(r))
        {
            boat.Add(r);
        }
    }

    public void Cancel(Role r)
    {
        if (boat.Remove(r))
        {
            if (pos == Position.sideA)
            {
                roles_A.Add(r);
            }
            else
            {
                roles_B.Add(r);
            }
        }
    }

    public void Drive()
    {
        if (boat.Count == 0)
        {
            return;
        }

        if (pos == Position.sideA)
        {
            foreach (var r in boat)
            {
                roles_B.Add(r);
            }
            pos = Position.sideB;
        }
        else
        {
            foreach (var r in boat)
            {
                roles_A.Add(r);
            }
            pos = Position.sideA;
        }

        boat.Clear();
        drive = pos == Position.sideA ? "align-self-start" : "align-self-end";
        if (isFail())
        {
            fail = true;
            drive = "d-none";
            replay = "align-self-center";
        }
        if (roles_A.Count == 0)
        {
            success = true;
            drive = "d-none";
            replay = "align-self-center";
            if (n == 6)
            {
                no_more = true;
            }
        }
    }

    private bool isFail()
    {
        // Side A
        if (roles_A.Where((x) => x.role == "K").Count() < roles_A.Where((x) => x.role == "G").Count())
        {
            if (roles_A.Where((x) => x.role == "K").Count() != 0)
            {
                return true;
            }
        }
        // Side B
        if (roles_B.Where((x) => x.role == "K").Count() < roles_B.Where((x) => x.role == "G").Count())
        {
            if (roles_B.Where((x) => x.role == "K").Count() != 0)
            {
                return true;
            }
        }
        return false;
    }

    public void Replay()
    {
        OnInitialized();

        pos = Position.sideA;
        drive = "align-self-start";
        replay = "d-none";
        fail = false;
        success = false;
        no_more = false;

        answer = false;
    }

    public void Next()
    {
        if (n < 6)
        {
            n++;
            Replay();
        }
        else
        {

        }
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
